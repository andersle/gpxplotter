# Copyright (c) 2021, Anders Lervik.
# Distributed under the LGPLv2.1+ License. See LICENSE for more info.
"""This module defines a class for replacing thumbnails

This module defines a class that will do some post-processing
for sphinx. It will replace some thumbnails that sphinx-gallery
generate automatically. The use case here is to add thumbnails
of HTML-pages that are not too easy to generate fully automatically.

"""
import pathlib
from shutil import copyfile
from docutils import nodes
from sphinx.transforms.post_transforms import SphinxPostTransform


DEFAULTS = {
    'thumbnail_dir': 'gallery_thumbs',
}


class ThumnailUpdater(SphinxPostTransform):
    """Replace thumbnails generated by sphinx-gallery."""
    default_priority = 100

    def run(self, **kwargs):
        # Check if we can get the config
        gallery_conf = getattr(self.config, 'sphinx_gallery_conf')
        gallery_dirs = gallery_conf['gallery_dirs']

        config = DEFAULTS.copy()
        config_set = getattr(self.config, 'thumbnail_updater_conf', {})
        config.update(config_set)
        thumbs_dir = pathlib.Path(self.app.srcdir).joinpath(
            config['thumbnail_dir']
        )
        thumbs_files = [i for i in thumbs_dir.rglob('*') if i.is_file()]

        for node in self.document.traverse(nodes.image):
            path = pathlib.Path(node['uri'])
            if not check_file_path(path, gallery_dirs):
                continue
            source = None
            for i in thumbs_files:
                if i.name == path.name:
                    source = i
                    break
            if source:
                target = pathlib.Path(self.app.srcdir).joinpath(path)
                copyfile(source, target)


def check_file_path(path, gallery_dirs):
    """Check if a filename seems to be a thumbnail."""
    filename = path.name
    if '_thumb' not in filename:
        return False
    if 'sphx_glr' not in filename:
        return False
    parents = [i.name for i in path.parents]
    if 'thumb' not in parents:
        return False
    if not any((i in parents for i in gallery_dirs)):
        return False
    return True


def setup(app):
    """Register the Thumbnail updater."""
    app.add_post_transform(ThumnailUpdater)

    return {
        'version': '0.1',
        'parallel_read_safe': True,
        'parallel_write_safe': True,
    }
